<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Julep Tech]]></title>
  <link href="http://tech.julep.com/atom.xml" rel="self"/>
  <link href="http://tech.julep.com/"/>
  <updated>2013-03-28T09:46:46-07:00</updated>
  <id>http://tech.julep.com/</id>
  <author>
    <name><![CDATA[tech team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Presentation to University of Washington CS Students]]></title>
    <link href="http://tech.julep.com/blog/2013/03/27/visiting-the-uw/"/>
    <updated>2013-03-27T18:34:00-07:00</updated>
    <id>http://tech.julep.com/blog/2013/03/27/visiting-the-uw</id>
    <content type="html"><![CDATA[<p>Recently <a href="http://www.julep.com/">Julep</a> was invited to the University of Washington to present to the
Computer Science students on life in a startup.  We were impressed with the
number of students present and the lively conversation which ensued.  While
Julep has been around as a Nail Parlor for some time, the e-commerce solution
will celebrate only it&#8217;s 2nd birthday this coming summer.</p>

<!-- more -->


<p>More intriguing, beginning with myself, the entire engineering team has a
tenure of just over six months.  In a very short time we&#8217;ve written a lot of
code and evanglized the merits of Lean Agile developement.  In a follow up
post, I&#8217;ll talk more about our software development process.  We hail from 3
distinct geographies: Seattle, Michigan and Ukraine.</p>

<p>Without further ado, here is the presentation Jason Baik and I delivered:</p>

<br><br>


<p>cheers,<br>
James</p>

<iframe src="http://app.sliderocket.com:80/app/fullplayer.aspx?id=5f1f6533-e1d7-4e04-bff3-c2ebc2b6273c" width="640" height="506" scrolling=no frameBorder="1" style="border:1px solid #333333;border-bottom-style:none"></iframe>


<p>{lovingly authored in vim}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cache Busting Clientside]]></title>
    <link href="http://tech.julep.com/blog/2013/03/26/cache-busting-clientside/"/>
    <updated>2013-03-26T14:25:00-07:00</updated>
    <id>http://tech.julep.com/blog/2013/03/26/cache-busting-clientside</id>
    <content type="html"><![CDATA[<p>One of the problems we had to overcome at <a href="http://www.julep.com">Julep</a> was <strong>cache-busting</strong>. This refers to when a client&#8217;s web browser caches a copy of <code>styles.css</code>, and doesn&#8217;t know we&#8217;ve made changes to that file and that it needs to download a new version.</p>

<!-- more -->


<p>This issue might seem minor at first, a few misaligned blocks, a block of text not styled quite right. The <del>easy</del> wrong answer: <em>Just tell them to refresh the browser, Shift + Refresh!</em></p>

<p>But that isn&#8217;t very nice, and when a user gets a page that is destroyed by out of date javascript and are posting on facebook on your behalf that you need to <em>Shift + Refresh</em>, well that is something you should be finding a solution to.</p>

<p><a href="http://developer.yahoo.com/blogs/ydn/posts/2007/05/high_performanc_2/">Yslow</a> and <a href="https://developers.google.com/speed/docs/best-practices/caching#LeverageBrowserCaching">Google Insights</a> confirm that we should be using <em>far future expirations</em> on these files so that they are aggressively cached.
The solution they propose to this cache-busting issue is to use the <a href="http://en.wikipedia.org/wiki/HTTP_ETag">ETag</a> property in the headers. It sounds like the perfect solution, but yahoo warns that they are <a href="http://developer.yahoo.com/performance/rules.html#etags">strongly tied to the origin server</a>. The second solution is the <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">Last-Modified header</a> which relies on a timestamp handshake between server and client.</p>

<p>We opted for a solution that provides granularity and control, we modify the file name based on the SHA stamp of the last git commit on that file. Every commit has a SHA stamp, and we can guarantee that user&#8217;s are forced new assets when we release code.</p>

<h2>Here is how we solved the issue:</h2>

<ol>
<li>First we keep a running list of the files that need to be managed</li>
<li>Then we append the first 8 characters of the SHA stamp for the last git commit to touch that file</li>
<li>In magento we also have to update xml files where these assets are initially requested. This part is still a manual step.</li>
</ol>


<figure class='code'><figcaption><span>SHA-Stamping Files  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c"># Create sha stamped assets from this list of files</span>
</span><span class='line'>
</span><span class='line'><span class="nv">FILES</span><span class="o">=</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">../skin/frontend/julep/default/css/styles.css</span>
</span><span class='line'><span class="s2">../skin/frontend/julep/default/css/plugins.css</span>
</span><span class='line'><span class="s2">../skin/frontend/julep/default/js/julep.js</span>
</span><span class='line'><span class="s2">../skin/frontend/julep/default/js/plugins.min.js</span>
</span><span class='line'><span class="s2">../js/general/campaign_configuration.js</span>
</span><span class='line'><span class="s2">../js/general/julep.js</span>
</span><span class='line'><span class="s2">../js/general/quiz_handler.js</span>
</span><span class='line'><span class="s2">../skin/frontend/julep/default/css/quiz.css</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for </span>f in <span class="nv">$FILES</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">  </span><span class="nv">sha</span><span class="o">=</span><span class="k">$(</span>git log --pretty<span class="o">=</span>oneline -1 <span class="nv">$f</span> | cut -c1-8<span class="k">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">extension</span><span class="o">=</span><span class="s2">&quot;${f##*.}&quot;</span>
</span><span class='line'>  <span class="nv">filepath</span><span class="o">=</span><span class="s2">&quot;${f%.*}&quot;</span>
</span><span class='line'>
</span><span class='line'>  cp <span class="k">${</span><span class="nv">f</span><span class="k">}</span> <span class="k">${</span><span class="nv">filepath</span><span class="k">}</span>_<span class="k">${</span><span class="nv">sha</span><span class="k">}</span>.<span class="k">${</span><span class="nv">extension</span><span class="k">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;Processed: ${f}&quot;</span>;
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note: One weird side-effect is for files like <code>plugins.min.js</code> get renamed <code>plugins.min_12345678.js</code> if that bugs you, be sure to update the bash code above.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bringing that MVC clientside]]></title>
    <link href="http://tech.julep.com/blog/2013/01/01/bringing-that-mvc-clientside/"/>
    <updated>2013-01-01T18:59:00-08:00</updated>
    <id>http://tech.julep.com/blog/2013/01/01/bringing-that-mvc-clientside</id>
    <content type="html"><![CDATA[<p>We started doing brown bag lunch and presentations recently. The lunch was
Po&#8217; Boys from <a href="http://whereyaatmatt.com/">Where ya at matt</a>, and the topic
was JavaScript MV*.</p>

<p>MVC (<a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">Model-View-Controller</a>)
is a pattern used to keep code organized by dividing it into components.
Recently this structure has been migrating from the back-end to the front-end.
Anything that keeps us more organized and standardized is probably a good idea, so we
decided to look into it more.</p>

<h3>tl;dr</h3>

<ul>
<li><strong>BackboneJS</strong> - Easy to use, well documented, tons of tuts. You could/should be using it
right now</li>
<li><strong>AngularJS</strong> - MV* of the future. Use it for contained projects, where we want to feel like we are in the future</li>
<li><strong>EmberJS</strong> - Structured, opinionated, but overshadowed by the other two</li>
</ul>


<!-- more -->


<h3>The presentation</h3>

<p>The presentation notes have all of my talking points, so be sure to
<a href="https://docs.google.com/presentation/d/1CE6bFc6yP09OcIJ6xoFxfkVOkGxUxLFUZWgAQGXvbRA/edit">check them out and read along</a></p>

<iframe src="https://docs.google.com/presentation/embed?id=1CE6bFc6yP09OcIJ6xoFxfkVOkGxUxLFUZWgAQGXvbRA&start=false&loop=false&delayms=3000" frameborder="0" width="790" height="621" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Behind the curtain]]></title>
    <link href="http://tech.julep.com/blog/2012/12/19/behind-the-curtain/"/>
    <updated>2012-12-19T22:51:00-08:00</updated>
    <id>http://tech.julep.com/blog/2012/12/19/behind-the-curtain</id>
    <content type="html"><![CDATA[<p>Hello there,</p>

<p>This blog will act as a place to share our musings,
hacks, and profound revelations from the web. We hope you
enjoy it and maybe even learn something.</p>

<p>If you were curious as to what exactly is going on behind the
curtains at julep.com this might shed some light.</p>

<p>This blog is a testament to the nerds in our group. Powered by
octopress, written in markdown, and hosted on github.</p>
]]></content>
  </entry>
  
</feed>
